{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\test\\\\small-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction } from 'redux-actions';\nconst BOARD_SAVE = 'SAVE';\nconst BOARD_REMOVE = 'REMOVE';\nconst BOARD_READ = 'ONE';\nconst BOARD_LIST = 'LIST';\nexport const board_save = createAction(BOARD_SAVE);\nexport const board_remove = createAction(BOARD_REMOVE, brdno => brdno);\nexport const board_read = createAction(BOARD_READ);\nexport const board_list = createAction(BOARD_LIST);\nconst initialState = {\n  maxNo: 3,\n  boards: [{\n    brdno: 1,\n    brdwriter: 'Lee SunSin',\n    brdtitle: 'If you intend to live then you die',\n    brddate: new Date()\n  }, {\n    brdno: 2,\n    brdwriter: 'So SiNo',\n    brdtitle: 'Founder for two countries',\n    brddate: new Date()\n  }],\n  selectedBoard: {}\n};\nexport default handleActions({\n  [BOARD_SAVE]: (state, {\n    payload: data\n  }) => {\n    let boards = state.boards;\n\n    if (!data.brdno) {\n      let maxNo = state.maxNo;\n      return {\n        maxNo: maxNo + 1,\n        boards: boards.concat(_objectSpread({}, data, {\n          brdno: maxNo,\n          brddate: new Date()\n        })),\n        selectedBoard: {}\n      };\n    } else {\n      return _objectSpread({}, state, {\n        boards: boards.map(row => data.brdno === row.brdno ? _objectSpread({}, data) : row),\n        selectedBoard: {}\n      });\n    }\n  },\n  [BOARD_REMOVE]: (state, {\n    payload: brdno\n  }) => {\n    let boards = state.boards;\n    return _objectSpread({}, state, {\n      boards: boards.filter(row => row.brdno !== brdno),\n      selectedBoard: {}\n    });\n  },\n  [BOARD_READ]: (state, {\n    payload: brdno\n  }) => {\n    let boards = state.boards;\n    return _objectSpread({}, state, {\n      selectedBoard: boards.find(row => row.brdno === brdno)\n    });\n  }\n}, initialState);","map":{"version":3,"sources":["C:\\projects\\test\\small-project\\src\\reducers\\board.js"],"names":["createAction","BOARD_SAVE","BOARD_REMOVE","BOARD_READ","BOARD_LIST","board_save","board_remove","brdno","board_read","board_list","initialState","maxNo","boards","brdwriter","brdtitle","brddate","Date","selectedBoard","handleActions","state","payload","data","concat","map","row","filter","find"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,eAA7B;AAEA,MAAMC,UAAU,GAAG,MAAnB;AACA,MAAMC,YAAY,GAAG,QAArB;AACA,MAAMC,UAAU,GAAG,KAAnB;AACA,MAAMC,UAAU,GAAG,MAAnB;AAEA,OAAO,MAAMC,UAAU,GAAGL,YAAY,CAACC,UAAD,CAA/B;AACP,OAAO,MAAMK,YAAY,GAAGN,YAAY,CAACE,YAAD,EAAeK,KAAK,IAAIA,KAAxB,CAAjC;AACP,OAAO,MAAMC,UAAU,GAAGR,YAAY,CAACG,UAAD,CAA/B;AACP,OAAO,MAAMM,UAAU,GAAGT,YAAY,CAACI,UAAD,CAA/B;AAEP,MAAMM,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,MAAM,EAAE,CACA;AACIL,IAAAA,KAAK,EAAE,CADX;AAEIM,IAAAA,SAAS,EAAE,YAFf;AAGIC,IAAAA,QAAQ,EAAE,oCAHd;AAIIC,IAAAA,OAAO,EAAE,IAAIC,IAAJ;AAJb,GADA,EAOA;AACIT,IAAAA,KAAK,EAAE,CADX;AAEIM,IAAAA,SAAS,EAAE,SAFf;AAGIC,IAAAA,QAAQ,EAAE,2BAHd;AAIIC,IAAAA,OAAO,EAAE,IAAIC,IAAJ;AAJb,GAPA,CAFS;AAgBjBC,EAAAA,aAAa,EAAE;AAhBE,CAArB;AAmBA,eAAeC,aAAa,CAAC;AACzB,GAACjB,UAAD,GAAc,CAACkB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAR,KAA8B;AACxC,QAAIT,MAAM,GAAGO,KAAK,CAACP,MAAnB;;AACA,QAAI,CAACS,IAAI,CAACd,KAAV,EAAiB;AACb,UAAII,KAAK,GAAGQ,KAAK,CAACR,KAAlB;AACA,aAAO;AAACA,QAAAA,KAAK,EAAEA,KAAK,GAAC,CAAd;AAAiBC,QAAAA,MAAM,EAAEA,MAAM,CAACU,MAAP,mBAAkBD,IAAlB;AAAwBd,UAAAA,KAAK,EAACI,KAA9B;AAAqCI,UAAAA,OAAO,EAAE,IAAIC,IAAJ;AAA9C,WAAzB;AAAqFC,QAAAA,aAAa,EAAE;AAApG,OAAP;AACH,KAHD,MAGO;AACH,+BAAWE,KAAX;AAAkBP,QAAAA,MAAM,EAAEA,MAAM,CAACW,GAAP,CAAWC,GAAG,IAAIH,IAAI,CAACd,KAAL,KAAeiB,GAAG,CAACjB,KAAnB,qBAA+Bc,IAA/B,IAAuCG,GAAzD,CAA1B;AAAyFP,QAAAA,aAAa,EAAE;AAAxG;AACH;AACJ,GATwB;AAUzB,GAACf,YAAD,GAAgB,CAACiB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEb;AAAX,GAAR,KAA+B;AAC3C,QAAIK,MAAM,GAAGO,KAAK,CAACP,MAAnB;AACA,6BAAWO,KAAX;AAAkBP,MAAAA,MAAM,EAAEA,MAAM,CAACa,MAAP,CAAcD,GAAG,IAAIA,GAAG,CAACjB,KAAJ,KAAcA,KAAnC,CAA1B;AAAqEU,MAAAA,aAAa,EAAE;AAApF;AACH,GAbwB;AAczB,GAACd,UAAD,GAAc,CAACgB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEb;AAAX,GAAR,KAA+B;AACzC,QAAIK,MAAM,GAAGO,KAAK,CAACP,MAAnB;AACA,6BAAWO,KAAX;AAAkBF,MAAAA,aAAa,EAAEL,MAAM,CAACc,IAAP,CAAYF,GAAG,IAAIA,GAAG,CAACjB,KAAJ,KAAcA,KAAjC;AAAjC;AAEH;AAlBwB,CAAD,EAmBzBG,YAnByB,CAA5B","sourcesContent":["import { createAction } from 'redux-actions';\r\n\r\nconst BOARD_SAVE = 'SAVE';\r\nconst BOARD_REMOVE = 'REMOVE';\r\nconst BOARD_READ = 'ONE';\r\nconst BOARD_LIST = 'LIST';\r\n\r\nexport const board_save = createAction(BOARD_SAVE);\r\nexport const board_remove = createAction(BOARD_REMOVE, brdno => brdno);\r\nexport const board_read = createAction(BOARD_READ);\r\nexport const board_list = createAction(BOARD_LIST);\r\n\r\nconst initialState = {\r\n    maxNo: 3,\r\n    boards: [\r\n            {\r\n                brdno: 1,\r\n                brdwriter: 'Lee SunSin',\r\n                brdtitle: 'If you intend to live then you die',\r\n                brddate: new Date()\r\n            },\r\n            {\r\n                brdno: 2,\r\n                brdwriter: 'So SiNo',\r\n                brdtitle: 'Founder for two countries',\r\n                brddate: new Date()\r\n            }    \r\n    ],\r\n    selectedBoard: {}\r\n};\r\n\r\nexport default handleActions({\r\n    [BOARD_SAVE]: (state, { payload: data }) => {\r\n        let boards = state.boards;\r\n        if (!data.brdno) {\r\n            let maxNo = state.maxNo;\r\n            return {maxNo: maxNo+1, boards: boards.concat({...data, brdno:maxNo, brddate: new Date()}), selectedBoard: {} };\r\n        } else {\r\n            return {...state, boards: boards.map(row => data.brdno === row.brdno ? {...data }: row), selectedBoard: {} };\r\n        }    \r\n    },\r\n    [BOARD_REMOVE]: (state, { payload: brdno }) => {\r\n        let boards = state.boards;\r\n        return {...state, boards: boards.filter(row => row.brdno !== brdno), selectedBoard: {} };\r\n    },\r\n    [BOARD_READ]: (state, { payload: brdno }) => {\r\n        let boards = state.boards;\r\n        return {...state, selectedBoard: boards.find(row => row.brdno === brdno)\r\n        };\r\n    }\r\n}, initialState);"]},"metadata":{},"sourceType":"module"}