{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\test\\\\small-project\\\\src\\\\pages\\\\Board.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport 'App.css';\n\nclass Board extends React.Component {\n  render() {\n    const _this$props = this.props,\n          boards = _this$props.boards,\n          search = _this$props.search;\n    const board = boards.filter(c => c.get('name').indexOf(search) !== -1).sort((a, b) => {\n      if (a.get('name') > b.get('name')) return 1;\n      if (a.get('name') < b.get('name')) return -1;\n      return 0;\n    }).map(contact => React.createElement(ContactItem, {\n      key: contact.get('id'),\n      board: board,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, board);\n  }\n\n}\n\nBoard.propTypes = {\n  boards: ImmutablePropTypes.listOf(ImmutablePropTypes.mapContains({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    rank: PropTypes.string,\n    department: PropTypes.string\n  })),\n  search: PropTypes.string\n};\nexport default Board;","map":{"version":3,"sources":["C:\\projects\\test\\small-project\\src\\pages\\Board.js"],"names":["React","Component","styled","PropTypes","ImmutablePropTypes","Board","render","props","boards","search","board","filter","c","get","indexOf","sort","a","b","map","contact","propTypes","listOf","mapContains","id","string","name","rank","department"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAO,SAAP;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACC,SAA1B,CAAoC;AAalCK,EAAAA,MAAM,GAAG;AAAA,wBACoB,KAAKC,KADzB;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,MADT,eACSA,MADT;AAGP,UAAMC,KAAK,GAAGF,MAAM,CACjBG,MADW,CAEVC,CAAC,IAAIA,CAAC,CAACC,GAAF,CAAM,MAAN,EAAcC,OAAd,CAAsBL,MAAtB,MAAkC,CAAC,CAF9B,EAGVM,IAHU,CAIR,CAACC,CAAD,EAAGC,CAAH,KAAS;AACL,UAAGD,CAAC,CAACH,GAAF,CAAM,MAAN,IAAgBI,CAAC,CAACJ,GAAF,CAAM,MAAN,CAAnB,EAAkC,OAAO,CAAP;AAClC,UAAIG,CAAC,CAACH,GAAF,CAAM,MAAN,IAAgBI,CAAC,CAACJ,GAAF,CAAM,MAAN,CAApB,EAAmC,OAAO,CAAC,CAAR;AACnC,aAAO,CAAP;AACH,KARO,EASVK,GATU,CAURC,OAAO,IACH,oBAAC,WAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAACN,GAAR,CAAY,IAAZ,CADT;AAEI,MAAA,KAAK,EAAEH,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXI,CAAd;AAkBE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KADH,CADF;AAKF;;AAvCgC;;AAA9BL,K,CACGe,S,GAAY;AACjBZ,EAAAA,MAAM,EAAEJ,kBAAkB,CAACiB,MAAnB,CACJjB,kBAAkB,CAACkB,WAAnB,CAA+B;AAC3BC,IAAAA,EAAE,EAAEpB,SAAS,CAACqB,MADa;AAE3BC,IAAAA,IAAI,EAAEtB,SAAS,CAACqB,MAFW;AAG3BE,IAAAA,IAAI,EAAEvB,SAAS,CAACqB,MAHW;AAI3BG,IAAAA,UAAU,EAAExB,SAAS,CAACqB;AAJK,GAA/B,CADI,CADS;AASjBf,EAAAA,MAAM,EAAEN,SAAS,CAACqB;AATD,C;AAyCrB,eAAenB,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport 'App.css';\r\n\r\nclass Board extends React.Component {\r\n  static propTypes = {\r\n    boards: ImmutablePropTypes.listOf(\r\n        ImmutablePropTypes.mapContains({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            rank: PropTypes.string,\r\n            department: PropTypes.string\r\n        })\r\n    ),\r\n    search: PropTypes.string\r\n  }\r\n\r\n  render() {\r\n    const { boards, search } = this.props;\r\n\r\n    const board = boards\r\n      .filter(\r\n        c => c.get('name').indexOf(search) !== -1\r\n      ).sort(\r\n          (a,b) => {\r\n              if(a.get('name') > b.get('name')) return 1;\r\n              if (a.get('name') < b.get('name')) return -1;\r\n              return 0;\r\n          }\r\n      ).map(\r\n          contact => (\r\n              <ContactItem \r\n                  key={contact.get('id')} \r\n                  board={board}\r\n              />\r\n          )\r\n      );\r\n      \r\n      return (\r\n        <div>\r\n          {board}\r\n        </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}