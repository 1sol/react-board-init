{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\small-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from 'actions/ActionTypes';\nconst initialState = {\n  login: {\n    status: 'INIT'\n  },\n  status: {\n    isLoggedIn: false\n  }\n};\nexport default function authentication(state, action) {\n  if (typeof state === \"undefined\") state = initialState;\n\n  switch (action.type) {\n    case types.AUTH_LOGIN:\n      return _objectSpread({}, state, {\n        login: {\n          status: 'WAITING'\n        }\n      });\n\n    case types.AUTH_LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        login: {\n          status: 'SUCCESS'\n        },\n        status: _objectSpread({}, state.status, {\n          isLoggedIn: true\n        })\n      });\n\n    case types.AUTH_LOGIN_FAILURE:\n      return _objectSpread({}, state, {\n        login: {\n          status: 'FAILURE'\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\projects\\small-project\\src\\reducers\\authentication.js"],"names":["types","initialState","login","status","isLoggedIn","authentication","state","action","type","AUTH_LOGIN","AUTH_LOGIN_SUCCESS","AUTH_LOGIN_FAILURE"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,qBAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AADL,GADU;AAIjBA,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE;AADR;AAJS,CAArB;AASA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AAClD,MAAG,OAAOD,KAAP,KAAiB,WAApB,EACIA,KAAK,GAAGL,YAAR;;AAEJ,UAAOM,MAAM,CAACC,IAAd;AACI,SAAKR,KAAK,CAACS,UAAX;AACI,+BACOH,KADP;AAEIJ,QAAAA,KAAK,EAAE;AACHC,UAAAA,MAAM,EAAE;AADL;AAFX;;AAMJ,SAAKH,KAAK,CAACU,kBAAX;AACI,+BACOJ,KADP;AAEIJ,QAAAA,KAAK,EAAE;AACHC,UAAAA,MAAM,EAAE;AADL,SAFX;AAKIA,QAAAA,MAAM,oBACCG,KAAK,CAACH,MADP;AAEFC,UAAAA,UAAU,EAAE;AAFV;AALV;;AAUJ,SAAKJ,KAAK,CAACW,kBAAX;AACI,+BACOL,KADP;AAEIJ,QAAAA,KAAK,EAAE;AACHC,UAAAA,MAAM,EAAE;AADL;AAFX;;AAMJ;AACI,aAAOG,KAAP;AA3BR;AA6BH","sourcesContent":["import * as types from 'actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    login: {\r\n        status: 'INIT'\r\n    },\r\n    status: {\r\n        isLoggedIn: false\r\n    }\r\n};\r\n\r\nexport default function authentication(state, action) {\r\n    if(typeof state === \"undefined\")\r\n        state = initialState;\r\n\r\n    switch(action.type) {\r\n        case types.AUTH_LOGIN:\r\n            return {\r\n                ...state,\r\n                login: {\r\n                    status: 'WAITING'\r\n                }\r\n            };\r\n        case types.AUTH_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                login: {\r\n                    status: 'SUCCESS'\r\n                },\r\n                status: {\r\n                    ...state.status,\r\n                    isLoggedIn: true\r\n                }\r\n            };\r\n        case types.AUTH_LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                login: {\r\n                    status: 'FAILURE'\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}