{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\small-project\\\\src\\\\containers\\\\Login.js\";\nimport React from 'react';\nimport { Authentication } from 'components';\nimport { connect } from 'react-redux';\nimport { loginRequest } from 'actions/authentication';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogin = pw => {\n      return this.props.loginRequest(pw).then(() => {\n        if (this.props.status === \"SUCCESS\") {\n          let loginData = {\n            isLoggedIn: true\n          };\n          return true;\n        } else {\n          return false;\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Authentication, {\n      mode: true,\n      onLogin: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.authentication.login.status\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginRequest: (id, pw) => {\n      return dispatch(loginRequest(id, pw));\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["C:\\projects\\small-project\\src\\containers\\Login.js"],"names":["React","Authentication","connect","loginRequest","Login","Component","handleLogin","pw","props","then","status","loginData","isLoggedIn","render","mapStateToProps","state","authentication","login","mapDispatchToProps","dispatch","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAChCC,WADgC,GACjBC,EAAD,IAAQ;AAClB,aAAO,KAAKC,KAAL,CAAWL,YAAX,CAAwBI,EAAxB,EAA4BE,IAA5B,CACH,MAAM;AACF,YAAG,KAAKD,KAAL,CAAWE,MAAX,KAAsB,SAAzB,EAAoC;AAChC,cAAIC,SAAS,GAAG;AACZC,YAAAA,UAAU,EAAE;AADA,WAAhB;AAGA,iBAAO,IAAP;AACH,SALD,MAKO;AACH,iBAAO,KAAP;AACH;AACJ,OAVE,CAAP;AAYH,KAd+B;AAAA;;AAgBhCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,IAAtB;AAA4B,MAAA,OAAO,EAAE,KAAKP,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAtB+B;;AAyBpC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,MAAM,EAAEK,KAAK,CAACC,cAAN,CAAqBC,KAArB,CAA2BP;AADhC,GAAP;AAGH,CAJD;;AAMA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHhB,IAAAA,YAAY,EAAE,CAACiB,EAAD,EAAKb,EAAL,KAAY;AACtB,aAAOY,QAAQ,CAAChB,YAAY,CAACiB,EAAD,EAAIb,EAAJ,CAAb,CAAf;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAA0BV,KAA1B,CAAf","sourcesContent":["import React from 'react';\r\nimport { Authentication } from 'components';\r\nimport { connect } from 'react-redux';\r\nimport { loginRequest } from 'actions/authentication';\r\n\r\nclass Login extends React.Component {\r\n    handleLogin = (pw) => {\r\n        return this.props.loginRequest(pw).then(\r\n            () => {\r\n                if(this.props.status === \"SUCCESS\") {\r\n                    let loginData = {\r\n                        isLoggedIn: true\r\n                    };\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Authentication mode={true} onLogin={this.handleLogin}/>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.authentication.login.status\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginRequest: (id, pw) => {\r\n            return dispatch(loginRequest(id,pw));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps) (Login);"]},"metadata":{},"sourceType":"module"}