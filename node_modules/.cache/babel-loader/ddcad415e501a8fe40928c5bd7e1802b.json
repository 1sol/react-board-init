{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\test\\\\small-project\\\\src\\\\pages\\\\Home.js\";\nimport React from 'react';\nimport { Header, BoardList, MemoList } from 'components';\nimport { boardPostRequest } from '../actions/board';\nimport 'App.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePost = this.handlePost.bind(this);\n  }\n\n  handlePost(contents) {\n    return this.props.boardPostRequest(contents).then(() => {\n      if (this.props.postStatus.status === \"SUCCESS\") {\n        alert(\"추가 성공\");\n      } else {\n        alert(\"추가 실패\");\n        return;\n      }\n    });\n  }\n\n  render() {\n    let re = /(login|detail)/;\n    let isAuth = re.test(this.props.location.pathname);\n    const board = React.createElement(BoardList, {\n      onPost: this.props.handlePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n    var mockData = [{\n      \"_id\": \"578b958ec1da760909c263f4\",\n      \"writer\": \"velopert\",\n      \"contents\": \"Testing\",\n      \"__v\": 0,\n      \"is_edited\": false,\n      \"date\": {\n        \"edited\": \"2016-07-17T14:26:22.428Z\",\n        \"created\": \"2016-07-17T14:26:22.428Z\"\n      },\n      \"starred\": []\n    }, {\n      \"_id\": \"578b957ec1da760909c263f3\",\n      \"writer\": \"velopert\",\n      \"contents\": \"Data\",\n      \"__v\": 0,\n      \"is_edited\": false,\n      \"date\": {\n        \"edited\": \"2016-07-17T14:26:06.999Z\",\n        \"created\": \"2016-07-17T14:26:06.999Z\"\n      },\n      \"starred\": []\n    }, {\n      \"_id\": \"578b957cc1da760909c263f2\",\n      \"writer\": \"velopert\",\n      \"contents\": \"Mock\",\n      \"__v\": 0,\n      \"is_edited\": false,\n      \"date\": {\n        \"edited\": \"2016-07-17T14:26:04.195Z\",\n        \"created\": \"2016-07-17T14:26:04.195Z\"\n      },\n      \"starred\": []\n    }, {\n      \"_id\": \"578b9579c1da760909c263f1\",\n      \"writer\": \"velopert\",\n      \"contents\": \"Some\",\n      \"__v\": 0,\n      \"is_edited\": false,\n      \"date\": {\n        \"edited\": \"2016-07-17T14:26:01.062Z\",\n        \"created\": \"2016-07-17T14:26:01.062Z\"\n      },\n      \"starred\": []\n    }, {\n      \"_id\": \"578b9576c1da760909c263f0\",\n      \"writer\": \"velopert\",\n      \"contents\": \"Create\",\n      \"__v\": 0,\n      \"is_edited\": false,\n      \"date\": {\n        \"edited\": \"2016-07-17T14:25:58.619Z\",\n        \"created\": \"2016-07-17T14:25:58.619Z\"\n      },\n      \"starred\": []\n    }, {\n      \"_id\": \"578b8c82c1da760909c263ef\",\n      \"writer\": \"velopert\",\n      \"contents\": \"blablablal\",\n      \"__v\": 0,\n      \"is_edited\": false,\n      \"date\": {\n        \"edited\": \"2016-07-17T13:47:46.611Z\",\n        \"created\": \"2016-07-17T13:47:46.611Z\"\n      },\n      \"starred\": []\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, isAuth ? undefined : React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(BoardList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(MemoList, {\n      data: mockData,\n      currentUser: \"velopert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:\\projects\\test\\small-project\\src\\pages\\Home.js"],"names":["React","Header","BoardList","MemoList","boardPostRequest","Home","Component","constructor","props","handlePost","bind","contents","then","postStatus","status","alert","render","re","isAuth","test","location","pathname","board","mockData","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Header, BoardList, MemoList } from 'components';\r\nimport { boardPostRequest } from '../actions/board';\r\nimport 'App.css';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);        \r\n        this.handlePost = this.handlePost.bind(this);\r\n    }\r\n\r\n    handlePost(contents) {\r\n        return this.props.boardPostRequest(contents).then(\r\n            () => {\r\n                if(this.props.postStatus.status === \"SUCCESS\") {\r\n                    alert(\"추가 성공\");\r\n                } else {\r\n                    alert(\"추가 실패\");\r\n                    return;\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        let re = /(login|detail)/;\r\n        let isAuth = re.test(this.props.location.pathname);\r\n\r\n        const board = (\r\n            <BoardList onPost={this.props.handlePost} />\r\n        );\r\n\r\n        var mockData = [\r\n            {\r\n                \"_id\": \"578b958ec1da760909c263f4\",\r\n                \"writer\": \"velopert\",\r\n                \"contents\": \"Testing\",\r\n                \"__v\": 0,\r\n                \"is_edited\": false,\r\n                \"date\": {\r\n                    \"edited\": \"2016-07-17T14:26:22.428Z\",\r\n                    \"created\": \"2016-07-17T14:26:22.428Z\"\r\n                },\r\n                \"starred\": []\r\n            },\r\n            {\r\n                \"_id\": \"578b957ec1da760909c263f3\",\r\n                \"writer\": \"velopert\",\r\n                \"contents\": \"Data\",\r\n                \"__v\": 0,\r\n                \"is_edited\": false,\r\n                \"date\": {\r\n                    \"edited\": \"2016-07-17T14:26:06.999Z\",\r\n                    \"created\": \"2016-07-17T14:26:06.999Z\"\r\n                },\r\n                \"starred\": []\r\n            },\r\n            {\r\n                \"_id\": \"578b957cc1da760909c263f2\",\r\n                \"writer\": \"velopert\",\r\n                \"contents\": \"Mock\",\r\n                \"__v\": 0,\r\n                \"is_edited\": false,\r\n                \"date\": {\r\n                    \"edited\": \"2016-07-17T14:26:04.195Z\",\r\n                    \"created\": \"2016-07-17T14:26:04.195Z\"\r\n                },\r\n                \"starred\": []\r\n            },\r\n            {\r\n                \"_id\": \"578b9579c1da760909c263f1\",\r\n                \"writer\": \"velopert\",\r\n                \"contents\": \"Some\",\r\n                \"__v\": 0,\r\n                \"is_edited\": false,\r\n                \"date\": {\r\n                    \"edited\": \"2016-07-17T14:26:01.062Z\",\r\n                    \"created\": \"2016-07-17T14:26:01.062Z\"\r\n                },\r\n                \"starred\": []\r\n            },\r\n            {\r\n                \"_id\": \"578b9576c1da760909c263f0\",\r\n                \"writer\": \"velopert\",\r\n                \"contents\": \"Create\",\r\n                \"__v\": 0,\r\n                \"is_edited\": false,\r\n                \"date\": {\r\n                    \"edited\": \"2016-07-17T14:25:58.619Z\",\r\n                    \"created\": \"2016-07-17T14:25:58.619Z\"\r\n                },\r\n                \"starred\": []\r\n            },\r\n            {\r\n                \"_id\": \"578b8c82c1da760909c263ef\",\r\n                \"writer\": \"velopert\",\r\n                \"contents\": \"blablablal\",\r\n                \"__v\": 0,\r\n                \"is_edited\": false,\r\n                \"date\": {\r\n                    \"edited\": \"2016-07-17T13:47:46.611Z\",\r\n                    \"created\": \"2016-07-17T13:47:46.611Z\"\r\n                },\r\n                \"starred\": []\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n               {isAuth ? undefined : <Header />}\r\n               <BoardList />\r\n               <MemoList data={mockData}  currentUser=\"velopert\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}