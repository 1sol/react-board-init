{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\small-project\\\\src\\\\containers\\\\Login.js\";\nimport React from 'react';\nimport { Authentication } from 'components';\nimport { connect } from 'react-redux';\nimport { loginRequest } from 'actions/authentication';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin(pw) {\n    return this.props.loginRequest(pw).then(() => {\n      if (this.props.status === \"SUCCESS\") {\n        let loginData = {\n          isLoggedIn: true\n        };\n      } else {}\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Authentication, {\n      mode: true,\n      onLogin: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.authentication.login.status\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginRequest: pw => {\n      return dispatch(loginRequest(pw));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:\\projects\\small-project\\src\\containers\\Login.js"],"names":["React","Authentication","connect","loginRequest","Login","Component","constructor","props","handleLogin","bind","pw","then","status","loginData","isLoggedIn","render","mapStateToProps","state","authentication","login","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,CAACE,EAAD,EAAK;AACZ,WAAO,KAAKH,KAAL,CAAWJ,YAAX,CAAwBO,EAAxB,EAA4BC,IAA5B,CACH,MAAM;AACF,UAAG,KAAKJ,KAAL,CAAWK,MAAX,KAAsB,SAAzB,EAAoC;AAChC,YAAIC,SAAS,GAAG;AACZC,UAAAA,UAAU,EAAE;AADA,SAAhB;AAGH,OAJD,MAIO,CAEN;AACJ,KATE,CAAP;AAWH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,IAAtB;AACI,MAAA,OAAO,EAAE,KAAKP,WADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH;;AA3B+B;;AA8BpC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,MAAM,EAAEK,KAAK,CAACC,cAAN,CAAqBC,KAArB,CAA2BP;AADhC,GAAP;AAGH,CAJD;;AAMA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHlB,IAAAA,YAAY,EAAGO,EAAD,IAAQ;AAClB,aAAOW,QAAQ,CAAClB,YAAY,CAACO,EAAD,CAAb,CAAf;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAeR,OAAO,CAACc,eAAD,EAAkBI,kBAAlB,CAAP,CAA8ChB,KAA9C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Authentication } from 'components';\r\nimport { connect } from 'react-redux';\r\nimport { loginRequest } from 'actions/authentication';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleLogin(pw) {\r\n        return this.props.loginRequest(pw).then (\r\n            () => {\r\n                if(this.props.status === \"SUCCESS\") {\r\n                    let loginData = {\r\n                        isLoggedIn: true\r\n                    };\r\n                } else {\r\n                    \r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Authentication mode={true} \r\n                    onLogin={this.handleLogin}/>\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.authentication.login.status\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginRequest: (pw) => {\r\n            return dispatch(loginRequest(pw));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Login);"]},"metadata":{},"sourceType":"module"}