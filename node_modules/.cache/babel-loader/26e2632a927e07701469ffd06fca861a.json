{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\test\\\\small-project\\\\src\\\\components\\\\BoardList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BoardItem from './BoardItem';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport 'App.css';\n\nclass BoardList extends React.Component {\n  render() {\n    const _this$props = this.props,\n          boards = _this$props.boards,\n          search = _this$props.search;\n    const boardList = boards.filter(c => c.get('name').indexOf(search) !== -1).sort((a, b) => {\n      if (a.get('name') > b.get('name')) return 1;\n      if (a.get('name') < b.get('name')) return -1;\n      return 0;\n    }).map(board => React.createElement(BoardItem, {\n      key: contact.get('id'),\n      board: board,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, boardList);\n  }\n\n}\n\nBoardList.propTypes = {\n  boards: ImmutablePropTypes.listOf(ImmutablePropTypes.mapContains({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    rank: PropTypes.string,\n    department: PropTypes.string\n  })),\n  search: PropTypes.string\n};\nexport default BoardList;","map":{"version":3,"sources":["C:\\projects\\test\\small-project\\src\\components\\BoardList.js"],"names":["React","PropTypes","BoardItem","ImmutablePropTypes","BoardList","Component","render","props","boards","search","boardList","filter","c","get","indexOf","sort","a","b","map","board","contact","propTypes","listOf","mapContains","id","string","name","rank","department"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAO,SAAP;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAatCC,EAAAA,MAAM,GAAG;AAAA,wBACoB,KAAKC,KADzB;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,MADT,eACSA,MADT;AAGP,UAAMC,SAAS,GAAGF,MAAM,CACrBG,MADe,CAEdC,CAAC,IAAIA,CAAC,CAACC,GAAF,CAAM,MAAN,EAAcC,OAAd,CAAsBL,MAAtB,MAAkC,CAAC,CAF1B,EAGdM,IAHc,CAIZ,CAACC,CAAD,EAAGC,CAAH,KAAS;AACL,UAAGD,CAAC,CAACH,GAAF,CAAM,MAAN,IAAgBI,CAAC,CAACJ,GAAF,CAAM,MAAN,CAAnB,EAAkC,OAAO,CAAP;AAClC,UAAIG,CAAC,CAACH,GAAF,CAAM,MAAN,IAAgBI,CAAC,CAACJ,GAAF,CAAM,MAAN,CAApB,EAAmC,OAAO,CAAC,CAAR;AACnC,aAAO,CAAP;AACH,KARW,EASdK,GATc,CAUZC,KAAK,IACD,oBAAC,SAAD;AACI,MAAA,GAAG,EAAEC,OAAO,CAACP,GAAR,CAAY,IAAZ,CADT;AAEI,MAAA,KAAK,EAAEM,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXQ,CAAlB;AAkBE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,SADH,CADF;AAKF;;AAvCoC;;AAAlCN,S,CACGiB,S,GAAY;AACjBb,EAAAA,MAAM,EAAEL,kBAAkB,CAACmB,MAAnB,CACJnB,kBAAkB,CAACoB,WAAnB,CAA+B;AAC3BC,IAAAA,EAAE,EAAEvB,SAAS,CAACwB,MADa;AAE3BC,IAAAA,IAAI,EAAEzB,SAAS,CAACwB,MAFW;AAG3BE,IAAAA,IAAI,EAAE1B,SAAS,CAACwB,MAHW;AAI3BG,IAAAA,UAAU,EAAE3B,SAAS,CAACwB;AAJK,GAA/B,CADI,CADS;AASjBhB,EAAAA,MAAM,EAAER,SAAS,CAACwB;AATD,C;AAyCrB,eAAerB,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BoardItem from './BoardItem';\r\nimport ImmutablePropTypes from 'react-immutable-proptypes';\r\nimport 'App.css';\r\n\r\nclass BoardList extends React.Component {\r\n  static propTypes = {\r\n    boards: ImmutablePropTypes.listOf(\r\n        ImmutablePropTypes.mapContains({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            rank: PropTypes.string,\r\n            department: PropTypes.string\r\n        })\r\n    ),\r\n    search: PropTypes.string\r\n  }\r\n\r\n  render() {\r\n    const { boards, search } = this.props;\r\n\r\n    const boardList = boards\r\n      .filter(\r\n        c => c.get('name').indexOf(search) !== -1\r\n      ).sort(\r\n          (a,b) => {\r\n              if(a.get('name') > b.get('name')) return 1;\r\n              if (a.get('name') < b.get('name')) return -1;\r\n              return 0;\r\n          }\r\n      ).map(\r\n          board => (\r\n              <BoardItem \r\n                  key={contact.get('id')} \r\n                  board={board}\r\n              />\r\n          )\r\n      );\r\n      \r\n      return (\r\n        <div>\r\n          {boardList}\r\n        </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default BoardList;"]},"metadata":{},"sourceType":"module"}