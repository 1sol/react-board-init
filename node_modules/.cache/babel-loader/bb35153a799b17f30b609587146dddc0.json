{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\test\\\\small-project\\\\src\\\\pages\\\\Board.js\";\nimport React from 'react';\nimport BoardForm from '../components/BoardForm';\nimport BoardItemList from '../components/BoardItemList';\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 3;\n    this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: ' 리액트 소개',\n        checked: false\n      }, {\n        id: 1,\n        text: ' 리액트 소개',\n        checked: true\n      }, {\n        id: 2,\n        text: ' 리액트 소개',\n        checked: false\n      }]\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value // input 의 다음 바뀔 값\n\n      });\n    };\n\n    this.handleCreate = () => {\n      const _this$state = this.state,\n            input = _this$state.input,\n            todos = _this$state.todos;\n      this.setState({\n        input: '',\n        // 인풋 비우고\n        // concat 을 사용하여 배열에 추가\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          checked: false\n        })\n      });\n    };\n\n    this.handleKeyPress = e => {\n      // 눌려진 키가 Enter 면 handleCreate 호출\n      if (e.key === 'Enter') {\n        this.handleCreate();\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(BoardItemList, {\n      form: React.createElement(BoardForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(BoardList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:\\projects\\test\\small-project\\src\\pages\\Board.js"],"names":["React","BoardForm","BoardItemList","Board","Component","id","state","input","todos","text","checked","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,EADkC,GAC7B,CAD6B;AAAA,SAGlCC,KAHkC,GAG1B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE,CACL;AAAEH,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OADK,EAEL;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAFK,EAGL;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASI,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAHK;AAFD,KAH0B;;AAAA,SAYlCC,YAZkC,GAYlBC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAEK,CAAC,CAACE,MAAF,CAASC,KADJ,CACU;;AADV,OAAd;AAGD,KAhBiC;;AAAA,SAkBlCC,YAlBkC,GAkBnB,MAAM;AAAA,0BACM,KAAKV,KADX;AAAA,YACXC,KADW,eACXA,KADW;AAAA,YACJC,KADI,eACJA,KADI;AAEnB,WAAKK,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE,EADK;AACD;AACX;AACAC,QAAAA,KAAK,EAAEA,KAAK,CAACS,MAAN,CAAa;AAClBZ,UAAAA,EAAE,EAAE,KAAKA,EAAL,EADc;AAElBI,UAAAA,IAAI,EAAEF,KAFY;AAGlBG,UAAAA,OAAO,EAAE;AAHS,SAAb;AAHK,OAAd;AASD,KA7BiC;;AAAA,SA+BlCQ,cA/BkC,GA+BhBN,CAAD,IAAO;AACtB;AACA,UAAGA,CAAC,CAACO,GAAF,KAAU,OAAb,EAAsB;AACpB,aAAKH,YAAL;AACD;AACF,KApCiC;AAAA;;AAsClCI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA5CiC;;AA+CpC,eAAejB,KAAf","sourcesContent":["import React from 'react';\r\nimport BoardForm from '../components/BoardForm';\r\nimport BoardItemList from '../components/BoardItemList';\r\n\r\nclass Board extends React.Component {\r\n  id = 3\r\n\r\n  state = {\r\n    input: '',\r\n    todos: [\r\n      { id: 0, text: ' 리액트 소개', checked: false },\r\n      { id: 1, text: ' 리액트 소개', checked: true },\r\n      { id: 2, text: ' 리액트 소개', checked: false }\r\n    ]\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      input: e.target.value // input 의 다음 바뀔 값\r\n    });\r\n  }\r\n\r\n  handleCreate = () => {\r\n    const { input, todos } = this.state;\r\n    this.setState({\r\n      input: '', // 인풋 비우고\r\n      // concat 을 사용하여 배열에 추가\r\n      todos: todos.concat({\r\n        id: this.id++,\r\n        text: input,\r\n        checked: false\r\n      })\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n    // 눌려진 키가 Enter 면 handleCreate 호출\r\n    if(e.key === 'Enter') {\r\n      this.handleCreate();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BoardItemList form={<BoardForm/>}>\r\n        <BoardList />\r\n      </BoardItemList>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}